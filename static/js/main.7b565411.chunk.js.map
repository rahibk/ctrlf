{"version":3,"sources":["Components/SearchResult.jsx","Clients/YoutubeClient.js","Components/MainBody.jsx","App.js","serviceWorker.js","index.js"],"names":["SearchResult","youtubeUrl","keyword","useState","activeStep","setActiveStep","videoUrl","setVideoUrl","timeStamps","setTimeStamps","theme","useTheme","tutorialSteps","setTutorialSteps","setVideoTranscript","useEffect","id","videoId","url","match","length","alert","extractVideoID","axios","get","then","response","data","catch","error","console","log","YoutubeClient","text","x","DOMParser","parseFromString","getElementsByTagName","i","childNodes","nodeValue","toLowerCase","search","timeStamp","push","getAttribute","baseUrl","stepsObj","stepObj","imgPath","createTutorialSteps","Container","maxWidth","Typography","variant","align","color","paragraph","className","playing","width","controls","MobileStepper","steps","position","nextButton","Button","size","onClick","nextStep","disabled","direction","backButton","prevStep","useStyles","makeStyles","icon","marginRight","spacing","heroContent","backgroundColor","palette","background","paper","padding","heroButtons","marginTop","cardGrid","paddingTop","paddingBottom","card","height","display","flexDirection","cardMedia","cardContent","flexGrow","footer","MainBody","classes","searchTriggered","setSearchTriggered","setKeyword","setYoutubeUrl","Fragment","CssBaseline","AppBar","Toolbar","noWrap","component","gutterBottom","style","justifyContent","TextField","helperText","onChange","event","target","value","label","placeholder","createMuiTheme","primary","main","shape","borderRadius","typography","button","textTransform","fontFamily","subtitle2","fontWeight","App","ThemeProvider","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.7b565411.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport ReactPlayer from \"react-player\";\nimport MobileStepper from \"@material-ui/core/MobileStepper\";\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\nimport * as YoutubeClient from \"../Clients/YoutubeClient\";\n\nexport default function SearchResult({ youtubeUrl, keyword }) {\n  const [activeStep, setActiveStep] = useState(0);\n  const [videoUrl, setVideoUrl] = useState(\"\");\n  const [timeStamps, setTimeStamps] = useState([]);\n  const theme = useTheme();\n  const [tutorialSteps, setTutorialSteps] = useState([]);\n  const [videoTranscript, setVideoTranscript] = useState({});\n\n  function extractVideoID(url) {\n    var regExp = /^.*((youtu.be\\/)|(v\\/)|(\\/u\\/\\w\\/)|(embed\\/)|(watch\\?))\\??v?=?([^#\\&\\?]*).*/;\n    var match = url.match(regExp);\n    if (match && match[7].length === 11) {\n      return match[7];\n    } else {\n      alert(\"Invalid Youtube URL\");\n    }\n  }\n\n  useEffect(() => {\n    const videoId = extractVideoID(youtubeUrl);\n    callYoutubeClient(videoId);\n  });\n\n  function callYoutubeClient(id) {\n    YoutubeClient.getTranscript(id)\n      .then(function (response) {\n        setVideoTranscript(response);\n\n        var parser, xmlDoc;\n        var text = response;\n\n        parser = new DOMParser();\n        xmlDoc = parser.parseFromString(text, \"text/xml\");\n\n        var x = xmlDoc.getElementsByTagName(\"text\");\n        for (var i = 0; i < x.length; i++) {\n          if (x[i].childNodes[0]) {\n            var textSegment = x[i].childNodes[0].nodeValue.toLowerCase();\n            var isFound = textSegment.search(keyword.toLowerCase());\n            if (isFound !== -1) {\n              var timeStamp = timeStamps;\n              timeStamp.push(x[i].getAttribute(\"start\"));\n              setTimeStamps(timeStamp);\n            }\n          }\n        }\n        createTutorialSteps(id);\n        console.log(timeStamps);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  }\n\n  function createTutorialSteps(id) {\n    const baseUrl = \"https://www.youtube.com/watch?v=\" + id + \"&t=\";\n    var stepsObj = [];\n    for (var i = 0; i < timeStamps.length; i++) {\n      var stepObj = {\n        imgPath: baseUrl + timeStamps[i],\n      };\n      stepsObj.push(stepObj);\n    }\n    setVideoUrl(stepsObj[0].imgPath);\n    setTutorialSteps(stepsObj);\n  }\n\n  const handleNext = () => {\n    var nextStep = activeStep + 1;\n    setActiveStep(nextStep);\n    setVideoUrl(tutorialSteps[nextStep].imgPath);\n  };\n\n  const handleBack = () => {\n    var prevStep = activeStep - 1;\n    setActiveStep(prevStep);\n    setVideoUrl(tutorialSteps[prevStep].imgPath);\n  };\n\n  return (\n    <div>\n      <Container maxWidth=\"sm\">\n        <Typography variant=\"h5\" align=\"center\" color=\"textSecondary\" paragraph>\n          Found {timeStamps.length} results of keyword \"{keyword}\"\n        </Typography>\n        <div id=\"result\">\n          <ReactPlayer\n            url={videoUrl}\n            className=\"react-player\"\n            playing\n            width=\"auto\"\n            controls={true}\n          />\n        </div>\n        <MobileStepper\n          steps={timeStamps.length}\n          position=\"static\"\n          variant=\"text\"\n          activeStep={activeStep}\n          nextButton={\n            <Button\n              size=\"small\"\n              onClick={handleNext}\n              disabled={activeStep === timeStamps.length - 1}\n            >\n              Next\n              {theme.direction === \"rtl\" ? (\n                <KeyboardArrowLeft />\n              ) : (\n                <KeyboardArrowRight />\n              )}\n            </Button>\n          }\n          backButton={\n            <Button\n              size=\"small\"\n              onClick={handleBack}\n              disabled={activeStep === 0}\n            >\n              {theme.direction === \"rtl\" ? (\n                <KeyboardArrowRight />\n              ) : (\n                <KeyboardArrowLeft />\n              )}\n              Back\n            </Button>\n          }\n        />\n      </Container>\n      <Typography variant=\"h5\" align=\"center\" color=\"textSecondary\">\n        Search for another word?\n      </Typography>\n    </div>\n  );\n}\n","import axios from \"axios\";\n\nexport function getTranscript(videoId) {\n  return axios\n    .get(\"http://video.google.com/timedtext?lang=en&v=\" + videoId)\n    .then(response => response.data)\n    .catch(error => console.log(error));\n}","import React, { useState } from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Button from \"@material-ui/core/Button\";\nimport YoutubeSearchedForIcon from '@material-ui/icons/YoutubeSearchedFor';\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport SearchResult from \"./SearchResult\";\nimport TextField from \"@material-ui/core/TextField\";\n\nconst useStyles = makeStyles(theme => ({\n  icon: {\n    marginRight: theme.spacing(2)\n  },\n  heroContent: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(8, 0, 6)\n  },\n  heroButtons: {\n    marginTop: theme.spacing(4)\n  },\n  cardGrid: {\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8)\n  },\n  card: {\n    height: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\"\n  },\n  cardMedia: {\n    paddingTop: \"56.25%\" // 16:9\n  },\n  cardContent: {\n    flexGrow: 1\n  },\n  footer: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(6)\n  }\n}));\n\nconst cards = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n\nexport default function MainBody() {\n  const classes = useStyles();\n  const [searchTriggered, setSearchTriggered] = useState(false);\n  const [keyword, setKeyword] = useState(\"\");\n  const [youtubeUrl, setYoutubeUrl] = useState(\"\");\n\n  function handleClick() {\n    setSearchTriggered(true);\n  }\n\n  function handleKeywordChange(event) {\n    console.log(event.target);\n    if (event.target.value.length > 0) {\n      setKeyword(event.target.value);\n    } else {\n      setKeyword(\"\");\n    }    \n  }\n\n  function handleUrlChange(event) {\n    if (event.target.value.length > 0) {\n      setYoutubeUrl(event.target.value);\n    } else {\n      setYoutubeUrl(\"\");\n    }    \n  }\n\n  return ( \n    <React.Fragment>\n      <CssBaseline />\n      <AppBar position=\"relative\">\n        <Toolbar>\n          <YoutubeSearchedForIcon className={classes.icon} />\n          <Typography variant=\"h6\" color=\"inherit\" noWrap>\n            Ctrl F\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <main>\n        {/* Hero unit */}\n        <div className={classes.heroContent}>\n        {youtubeUrl.length && keyword.length && searchTriggered ? (<SearchResult youtubeUrl={youtubeUrl} keyword={keyword}/>) : (\n          <Container maxWidth=\"sm\">\n            <Typography\n              component=\"h1\"\n              variant=\"h2\"\n              align=\"center\"\n              color=\"textPrimary\"\n              gutterBottom\n              \n            >\n              Ctrl F\n            </Typography>\n            <Typography\n              variant=\"h5\"\n              align=\"center\"\n              color=\"textSecondary\"\n              paragraph\n              \n            >\n             Don't have time to watch an entire youtube video to find a specific word? Not to worry use this tool to easily find keyword instances in a youtube video!{\" \"}\n            </Typography>\n            <div id=\"input\" style={{display: \"flex\", justifyContent:\"center\" }}>\n                  <TextField style={{ padding: \"5px\", width: \"30%\"}} helperText=\"\" error={keyword.length === 0} onChange={handleKeywordChange} id=\"keyword\" label=\"Keyword\" placeholder=\"economics\"/>\n                  <TextField style={{ padding: \"5px\", width: \"50%\"}} helperText=\"\" error={youtubeUrl.length === 0} onChange={handleUrlChange} id=\"url\" label=\"Youtube URL\" placeholder=\"http://youtube.com/YourURL\" />\n                  </div>\n              <div className={classes.heroButtons}>\n                <Button  onClick={handleClick} variant=\"contained\" color=\"primary\">\n                  Search\n                </Button>\n              </div>\n\n          </Container>\n          )}\n        </div>\n\n      </main>\n      <footer className={classes.footer}>\n        <Typography variant=\"h6\" align=\"center\" gutterBottom>\n          Footer\n        </Typography>\n        <Typography\n          variant=\"subtitle1\"\n          align=\"center\"\n          color=\"textSecondary\"\n          component=\"p\"\n        >\n          Something here to give the footer a purpose!\n        </Typography>\n      </footer>\n    </React.Fragment>\n  );\n}\n","import React from 'react';\nimport './App.css';\nimport MainBody from \"./Components/MainBody\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#3A96E8\"\n    },\n    text: {\n      disabled: \"#FFF\"\n    }\n  },\n  shape: {\n    borderRadius: 10\n  },\n  typography: {\n    button: {\n      textTransform: \"none\"\n    },\n    fontFamily: \"'Helvetica', 'Arial', sans-serif, 'Roboto'\",\n    subtitle2: {\n      fontWeight: \"bold\"\n    }\n  }\n});\n\nfunction App() {\n  return (\n    // <Router>\n    // <Switch>\n    //   <Route path=\"/\">\n    //     <div className=\"App\">\n    //       <ThemeProvider theme={theme}>\n    //         <MainBody />\n    //       </ThemeProvider>\n    // //     </div>\n    // //   </Route>\n          \n    //       <Route path=\"/search\">\n          <div className=\"App\">\n          <ThemeProvider theme={theme}>\n            <MainBody />\n          </ThemeProvider>\n        </div>\n  //     </Route>\n\n    \n  // </Switch>\n  //     </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}